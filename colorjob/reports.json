{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2024-07-10T13:59:31.232Z",
    "end": "2024-07-10T14:01:55.595Z",
    "duration": 144363,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8eb5777b-9abb-49ec-b113-b904018d4910",
      "title": "",
      "fullFile": "C:\\terenbro\\colorjob-measure-metrics\\test\\workInViewTabSU.test.js",
      "file": "\\test\\workInViewTabSU.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ad051f96-17bf-48c3-a983-26b5d70a028b",
          "title": "Change task status by SU and measure metrics",
          "fullFile": "C:\\terenbro\\colorjob-measure-metrics\\test\\workInViewTabSU.test.js",
          "file": "\\test\\workInViewTabSU.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Change task status by SU and measure metrics\"",
              "fullTitle": "Change task status by SU and measure metrics \"before each\" hook in \"Change task status by SU and measure metrics\"",
              "timedOut": false,
              "duration": 18053,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await createDriver(browser, bVersion, os, testname);",
              "err": {},
              "uuid": "0a63cedf-a27d-4eaa-86c0-f872a1c88ead",
              "parentUUID": "ad051f96-17bf-48c3-a983-26b5d70a028b",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Change task status by SU and measure metrics\"",
              "fullTitle": "Change task status by SU and measure metrics \"before each\" hook in \"Change task status by SU and measure metrics\"",
              "timedOut": false,
              "duration": 5150,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await createDriver(browser, bVersion, os, testname);",
              "err": {},
              "uuid": "37e5dc5b-a544-4583-a27c-a81bc45579d1",
              "parentUUID": "ad051f96-17bf-48c3-a983-26b5d70a028b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Change task status by SU and measure metrics\"",
              "fullTitle": "Change task status by SU and measure metrics \"after each\" hook in \"Change task status by SU and measure metrics\"",
              "timedOut": false,
              "duration": 168,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) {\n  await driver.quit();\n}",
              "err": {},
              "uuid": "8cafa64f-65aa-4b9b-897c-da7817fbb426",
              "parentUUID": "ad051f96-17bf-48c3-a983-26b5d70a028b",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Change task status by SU and measure metrics\"",
              "fullTitle": "Change task status by SU and measure metrics \"after each\" hook in \"Change task status by SU and measure metrics\"",
              "timedOut": false,
              "duration": 173,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) {\n  await driver.quit();\n}",
              "err": {},
              "uuid": "6e5c1541-f364-46df-a6cf-a827ffe58777",
              "parentUUID": "ad051f96-17bf-48c3-a983-26b5d70a028b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "change task status by SU in the Safari",
              "fullTitle": "Change task status by SU and measure metrics change task status by SU in the Safari",
              "timedOut": false,
              "duration": 44121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driver, config.urlLoginPage);\nconst changeAreaStatus = new ChangeAreaStatusInProjectProgress(driver);\nconst weightChange = new WeightChange(driver);\nconst addCommentToArea = new AddCommentToArea(driver);\nawait logginPageTest.openLoginForm();\nawait logginPageTest.fillEmailInput(config.emailSU);\nawait logginPageTest.fillPasswordInput(config.passwordSU);\nawait logginPageTest.checkSaveForFuture();\nawait logginPageTest.login(config.mainCompanyPage);\ntry {\n//   await changeTaskStatus.goToTasksList(config.projectNameMain);\n\n   \n  await changeAreaStatus.goToView(config.projectNameMain, 'su'); \n  await changeAreaStatus.goToSelektTab(config.projectProgress); \n  const firstMeasure =  await changeAreaStatus.findeAreaStatusClickAndMeasureMetric();\n  const secondMeasure = await changeAreaStatus.changeStatusToDoOnInProgressMeasureMetrics();\n  await driver.sleep(1000);\n  const thirdMeasure = await weightChange.findeWeightAndChangeItMeasureMetrics(config.large);\n  await driver.sleep(1000);\n  const fourthMeasure = await addCommentToArea.addCommentMeasureMetrics(config.commentsSU);\n  await driver.sleep(1000);\n  await addCommentToArea.deleteComment(config.commentsSU);\n  await weightChange.findeWeightAndChangeIt(config.medium);\n  await changeAreaStatus.changeStatusInProgressOnToDo();\n  \n  SUManagerMeasure['Time metrics for change area status, weight and add comments by SU']=\n  {\n    ...firstMeasure,\n    ...secondMeasure,\n    ...thirdMeasure,\n    ...fourthMeasure\n  }\n  if(browser === \"Safari\" ){\n    saveMetrics(config.metricsFilePath, config.metricfileNameSafari,SUManagerMeasure)\n  } else{\n    saveMetrics(config.metricsFilePath, config.metricfileNameChrom,SUManagerMeasure)\n  }\n  await driver.executeScript(\"lambda-status=passed\");\n  await driver.sleep(1000);\n \n} catch (error) {\n  await makeScreenshot(driver, 'task_change_status');\n  await driver.executeScript(\"lambda-status=failed\");\n  throw error;\n}",
              "err": {},
              "uuid": "1cc4b5ed-7692-4d73-bcff-677d86972643",
              "parentUUID": "ad051f96-17bf-48c3-a983-26b5d70a028b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "change task status by SU in the Chrome",
              "fullTitle": "Change task status by SU and measure metrics change task status by SU in the Chrome",
              "timedOut": false,
              "duration": 65670,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driver, config.urlLoginPage);\nconst changeAreaStatus = new ChangeAreaStatusInProjectProgress(driver);\nconst weightChange = new WeightChange(driver);\nconst addCommentToArea = new AddCommentToArea(driver);\nawait logginPageTest.openLoginForm();\nawait logginPageTest.fillEmailInput(config.emailSU);\nawait logginPageTest.fillPasswordInput(config.passwordSU);\nawait logginPageTest.checkSaveForFuture();\nawait logginPageTest.login(config.mainCompanyPage);\ntry {\n//   await changeTaskStatus.goToTasksList(config.projectNameMain);\n\n   \n  await changeAreaStatus.goToView(config.projectNameMain, 'su'); \n  await changeAreaStatus.goToSelektTab(config.projectProgress); \n  const firstMeasure =  await changeAreaStatus.findeAreaStatusClickAndMeasureMetric();\n  const secondMeasure = await changeAreaStatus.changeStatusToDoOnInProgressMeasureMetrics();\n  await driver.sleep(1000);\n  const thirdMeasure = await weightChange.findeWeightAndChangeItMeasureMetrics(config.large);\n  await driver.sleep(1000);\n  const fourthMeasure = await addCommentToArea.addCommentMeasureMetrics(config.commentsSU);\n  await driver.sleep(1000);\n  await addCommentToArea.deleteComment(config.commentsSU);\n  await weightChange.findeWeightAndChangeIt(config.medium);\n  await changeAreaStatus.changeStatusInProgressOnToDo();\n  \n  SUManagerMeasure['Time metrics for change area status, weight and add comments by SU']=\n  {\n    ...firstMeasure,\n    ...secondMeasure,\n    ...thirdMeasure,\n    ...fourthMeasure\n  }\n  if(browser === \"Safari\" ){\n    saveMetrics(config.metricsFilePath, config.metricfileNameSafari,SUManagerMeasure)\n  } else{\n    saveMetrics(config.metricsFilePath, config.metricfileNameChrom,SUManagerMeasure)\n  }\n  await driver.executeScript(\"lambda-status=passed\");\n  await driver.sleep(1000);\n \n} catch (error) {\n  await makeScreenshot(driver, 'task_change_status');\n  await driver.executeScript(\"lambda-status=failed\");\n  throw error;\n}",
              "err": {},
              "uuid": "2010cb03-7a3b-44e8-bcf8-d0f170c7ce21",
              "parentUUID": "ad051f96-17bf-48c3-a983-26b5d70a028b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1cc4b5ed-7692-4d73-bcff-677d86972643",
            "2010cb03-7a3b-44e8-bcf8-d0f170c7ce21"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 109791,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "reports",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "colorjob",
        "reportFilename": "reports"
      },
      "version": "6.2.0"
    }
  }
}