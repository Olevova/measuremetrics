{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-07-15T15:01:27.971Z",
    "end": "2024-07-15T15:02:21.531Z",
    "duration": 53560,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "83d0e1d3-688c-47a7-932f-d3f0191a9396",
      "title": "",
      "fullFile": "C:\\terenbro\\colorjob-measure-metrics\\test\\workInViewTabSU.test.js",
      "file": "\\test\\workInViewTabSU.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ae9a61f3-3c1b-460c-83bb-1b7217115576",
          "title": "Change task status by SU and measure metrics",
          "fullFile": "C:\\terenbro\\colorjob-measure-metrics\\test\\workInViewTabSU.test.js",
          "file": "\\test\\workInViewTabSU.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Change task status by SU and measure metrics\"",
              "fullTitle": "Change task status by SU and measure metrics \"before each\" hook in \"Change task status by SU and measure metrics\"",
              "timedOut": false,
              "duration": 6889,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await createDriver(browser, bVersion, os);",
              "err": {},
              "uuid": "3879e59e-0452-4d70-858f-ff3c70f71ec1",
              "parentUUID": "ae9a61f3-3c1b-460c-83bb-1b7217115576",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Change task status by SU and measure metrics\"",
              "fullTitle": "Change task status by SU and measure metrics \"after each\" hook in \"Change task status by SU and measure metrics\"",
              "timedOut": false,
              "duration": 348,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) {\n  await driver.quit();\n}",
              "err": {},
              "uuid": "ce947a98-9f70-4c67-bf6c-21f38fa3296f",
              "parentUUID": "ae9a61f3-3c1b-460c-83bb-1b7217115576",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "change task status by SU in the",
              "fullTitle": "Change task status by SU and measure metrics change task status by SU in the",
              "timedOut": false,
              "duration": 46313,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "testname = `change task status by SU in the ${browser}`\nawait driver.executeScript(`lambda-name=${testname}`)\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driver, config.urlLoginPage);\nconst changeAreaStatus = new ChangeAreaStatusInProjectProgress(driver);\nconst weightChange = new WeightChange(driver);\nconst addCommentToArea = new AddCommentToArea(driver);\nawait logginPageTest.openLoginForm();\nawait logginPageTest.fillEmailInput(config.emailSU);\nawait logginPageTest.fillPasswordInput(config.passwordSU);\nawait logginPageTest.checkSaveForFuture();\nawait logginPageTest.login(config.mainCompanyPage);\ntry {\n  //   await changeTaskStatus.goToTasksList(config.projectNameMain);\n  await changeAreaStatus.goToView(config.projectNameMain, 'su');\n  await changeAreaStatus.goToSelektTab(config.projectProgress);\n  const firstMeasure =\n    await changeAreaStatus.findeAreaStatusClickAndMeasureMetric();\n  const secondMeasure =\n    await changeAreaStatus.changeStatusToDoOnInProgressMeasureMetrics();\n  await driver.sleep(1000);\n  const thirdMeasure =\n    await weightChange.findeWeightAndChangeItMeasureMetrics(config.large);\n  await driver.sleep(1000);\n  const fourthMeasure = await addCommentToArea.addCommentMeasureMetrics(\n    config.commentsSU\n  );\n  await driver.sleep(1000);\n  await addCommentToArea.deleteComment(config.commentsSU);\n  await weightChange.findeWeightAndChangeIt(config.medium);\n  await changeAreaStatus.changeStatusInProgressOnToDo();\n  SUManagerMeasure[\n    'Time metrics for change area status, weight and add comments by SU'\n  ] = {\n    ...firstMeasure,\n    ...secondMeasure,\n    ...thirdMeasure,\n    ...fourthMeasure,\n  };\n  if (browser === 'Safari') {\n    saveMetrics(\n      config.metricsFilePath,\n      config.metricfileNameSafari,\n      SUManagerMeasure\n    );\n  } else {\n    saveMetrics(\n      config.metricsFilePath,\n      config.metricfileNameChrom,\n      SUManagerMeasure\n    );\n  }\n  await driver.executeScript('lambda-status=passed');\n  await driver.sleep(1000);\n} catch (error) {\n  await makeScreenshot(driver, 'task_change_status');\n  await driver.executeScript('lambda-status=failed');\n  throw error;\n}",
              "err": {},
              "uuid": "f268696e-41dd-44b7-920f-9ac18d9d00a0",
              "parentUUID": "ae9a61f3-3c1b-460c-83bb-1b7217115576",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f268696e-41dd-44b7-920f-9ac18d9d00a0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 46313,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "reports",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "colorjob",
        "reportFilename": "reports"
      },
      "version": "6.2.0"
    }
  }
}