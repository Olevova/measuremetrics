{
  "stats": {
    "suites": 4,
    "tests": 8,
    "passes": 6,
    "pending": 0,
    "failures": 2,
    "start": "2024-07-15T10:32:19.266Z",
    "end": "2024-07-15T10:37:46.724Z",
    "duration": 327458,
    "testsRegistered": 8,
    "passPercent": 75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d2f43ace-0479-43d4-b4dd-f0344c709c80",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "16da6891-0a82-4a57-a50e-c5dd0fb69245",
          "title": "Create, edit and remove project by the SA and measure metrics in the",
          "fullFile": "C:\\terenbro\\colorjob-measure-metrics\\test\\createEditRemoveProjectBySA.test.js",
          "file": "\\test\\createEditRemoveProjectBySA.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Create, edit and remove project by the SA and measure metrics in the\"",
              "fullTitle": "Create, edit and remove project by the SA and measure metrics in the \"before each\" hook in \"Create, edit and remove project by the SA and measure metrics in the\"",
              "timedOut": false,
              "duration": 17546,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// testname = `Create, edit and remove project by the SA and measure metrics in the ${browser}`;\ndriver = await createDriver(browser, bVersion, os);",
              "err": {},
              "uuid": "50d2a6f8-2773-4d72-bfa3-a34f506935ca",
              "parentUUID": "16da6891-0a82-4a57-a50e-c5dd0fb69245",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Create, edit and remove project by the SA and measure metrics in the\"",
              "fullTitle": "Create, edit and remove project by the SA and measure metrics in the \"after each\" hook in \"Create, edit and remove project by the SA and measure metrics in the\"",
              "timedOut": false,
              "duration": 346,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) {\n  await driver.quit();\n}",
              "err": {},
              "uuid": "7959e403-0891-4018-b2c7-a894ee073962",
              "parentUUID": "16da6891-0a82-4a57-a50e-c5dd0fb69245",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "create new project",
              "fullTitle": "Create, edit and remove project by the SA and measure metrics in the create new project",
              "timedOut": false,
              "duration": 36157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "testname = `Create new project in the ${browser}`;\nawait driver.executeScript(`lambda-name=${testname}`);\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driver, config.urlLoginPage);\nconst createProjectTest = new CreateProject(driver);\nawait logginPageTest.openLoginForm();\nawait logginPageTest.fillEmailInput(config.email);\nawait logginPageTest.fillPasswordInput(config.password);\nawait logginPageTest.checkSaveForFuture();\nawait logginPageTest.login(config.urlhomePageForCheck);\ntry {\n  const firstMeasure = await createProjectTest.goToProjectListMeasureTime();\n  const secondMeasure =\n    await createProjectTest.fillCreateProjectFieldsMeasureTime(\n      config.companyName,\n      newProjectkey,\n      newProjectNumber,\n      newCompanyProjectBelong,\n      newProjectStreet,\n      newProjectApp,\n      newProjectState,\n      newCompanProjectCity,\n      newProjectZip,\n      newProjectClientName,\n      startDate,\n      eneDate\n    );\n  const thirdMeasure =\n    await createProjectTest.goToProjectDetailsPageMeasureTime(\n      config.companyName\n    );\n  createProjectMesuer['Time metrics for project creation by the SA'] = {\n    ...firstMeasure,\n    ...secondMeasure,\n    ...thirdMeasure,\n  };\n  if (browser === \"Safari\") {\n    saveMetrics(config.metricsFilePath, config.metricfileNameSafari, createProjectMesuer)\n  } else {\n     saveMetrics(config.metricsFilePath, config.metricfileNameChrom, createProjectMesuer)\n  }\n  await driver.executeScript(\"lambda-status=passed\");\n  // console.log(createProjectMesuer);\n} catch (error) {\n  await makeScreenshot(driver, 'project_create');\n  await driver.executeScript(\"lambda-status=failed\");\n  throw error;\n}",
              "err": {},
              "uuid": "4f8009c2-74ef-4ee8-8c46-b4e6aecf3db4",
              "parentUUID": "16da6891-0a82-4a57-a50e-c5dd0fb69245",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "remove project",
              "fullTitle": "Create, edit and remove project by the SA and measure metrics in the remove project",
              "timedOut": false,
              "duration": 22870,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "testname = `Remove new project in the ${browser}`;\nawait driver.executeScript(`lambda-name=${testname}`);\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driver, config.urlLoginPage);\nconst removeProject = new RemoveProject(driver);\ntry {\n  await logginPageTest.openLoginForm();\n  await logginPageTest.fillEmailInput(config.email);\n  await logginPageTest.fillPasswordInput(config.password);\n  await logginPageTest.checkSaveForFuture();\n  await logginPageTest.login(config.urlhomePageForCheck);\n  await removeProject.goToProjectList();\n  await removeProject.findProject(config.companyName, config.projectsPage);\n  await removeProject.removefindProject(config.companyName);\n  await driver.executeScript(\"lambda-status=passed\");\n} catch (error) {\n  await makeScreenshot(driver, 'project_remove');\n  await driver.executeScript(\"lambda-status=failed\");\n  throw error;\n}",
              "err": {},
              "uuid": "999a4d46-8460-489d-a7d3-df8734295f1d",
              "parentUUID": "16da6891-0a82-4a57-a50e-c5dd0fb69245",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f8009c2-74ef-4ee8-8c46-b4e6aecf3db4",
            "999a4d46-8460-489d-a7d3-df8734295f1d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 59027,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "0b01dfa6-b391-49fb-97c5-dbb54dcb516a",
          "title": "Create, edit and remove project by the SA and measure metrics in the",
          "fullFile": "C:\\terenbro\\colorjob-measure-metrics\\test\\createEditRemoveProjectBySA.test.js",
          "file": "\\test\\createEditRemoveProjectBySA.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Create, edit and remove project by the SA and measure metrics in the\"",
              "fullTitle": "Create, edit and remove project by the SA and measure metrics in the \"before each\" hook in \"Create, edit and remove project by the SA and measure metrics in the\"",
              "timedOut": false,
              "duration": 15013,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// testname = `Create, edit and remove project by the SA and measure metrics in the ${browser}`;\ndriver = await createDriver(browser, bVersion, os);",
              "err": {},
              "uuid": "9a110cba-fa84-4850-a514-06a337f8f4c1",
              "parentUUID": "0b01dfa6-b391-49fb-97c5-dbb54dcb516a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Create, edit and remove project by the SA and measure metrics in the\"",
              "fullTitle": "Create, edit and remove project by the SA and measure metrics in the \"after each\" hook in \"Create, edit and remove project by the SA and measure metrics in the\"",
              "timedOut": false,
              "duration": 171,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) {\n  await driver.quit();\n}",
              "err": {},
              "uuid": "1db996b0-d29e-476b-9e10-ff16ee14a598",
              "parentUUID": "0b01dfa6-b391-49fb-97c5-dbb54dcb516a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "create new project",
              "fullTitle": "Create, edit and remove project by the SA and measure metrics in the create new project",
              "timedOut": false,
              "duration": 49019,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "testname = `Create new project in the ${browser}`;\nawait driver.executeScript(`lambda-name=${testname}`);\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driver, config.urlLoginPage);\nconst createProjectTest = new CreateProject(driver);\nawait logginPageTest.openLoginForm();\nawait logginPageTest.fillEmailInput(config.email);\nawait logginPageTest.fillPasswordInput(config.password);\nawait logginPageTest.checkSaveForFuture();\nawait logginPageTest.login(config.urlhomePageForCheck);\ntry {\n  const firstMeasure = await createProjectTest.goToProjectListMeasureTime();\n  const secondMeasure =\n    await createProjectTest.fillCreateProjectFieldsMeasureTime(\n      config.companyName,\n      newProjectkey,\n      newProjectNumber,\n      newCompanyProjectBelong,\n      newProjectStreet,\n      newProjectApp,\n      newProjectState,\n      newCompanProjectCity,\n      newProjectZip,\n      newProjectClientName,\n      startDate,\n      eneDate\n    );\n  const thirdMeasure =\n    await createProjectTest.goToProjectDetailsPageMeasureTime(\n      config.companyName\n    );\n  createProjectMesuer['Time metrics for project creation by the SA'] = {\n    ...firstMeasure,\n    ...secondMeasure,\n    ...thirdMeasure,\n  };\n  if (browser === \"Safari\") {\n    saveMetrics(config.metricsFilePath, config.metricfileNameSafari, createProjectMesuer)\n  } else {\n     saveMetrics(config.metricsFilePath, config.metricfileNameChrom, createProjectMesuer)\n  }\n  await driver.executeScript(\"lambda-status=passed\");\n  // console.log(createProjectMesuer);\n} catch (error) {\n  await makeScreenshot(driver, 'project_create');\n  await driver.executeScript(\"lambda-status=failed\");\n  throw error;\n}",
              "err": {
                "message": "TimeoutError: Waiting element to become stale\nWait timed out after 10343ms",
                "estack": "TimeoutError: Waiting element to become stale\nWait timed out after 10343ms\n    at C:\\terenbro\\colorjob-measure-metrics\\node_modules\\selenium-webdriver\\lib\\webdriver.js:910:22\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "33090281-6286-46f0-8fcc-b6dde290765c",
              "parentUUID": "0b01dfa6-b391-49fb-97c5-dbb54dcb516a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "remove project",
              "fullTitle": "Create, edit and remove project by the SA and measure metrics in the remove project",
              "timedOut": false,
              "duration": 26627,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "testname = `Remove new project in the ${browser}`;\nawait driver.executeScript(`lambda-name=${testname}`);\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driver, config.urlLoginPage);\nconst removeProject = new RemoveProject(driver);\ntry {\n  await logginPageTest.openLoginForm();\n  await logginPageTest.fillEmailInput(config.email);\n  await logginPageTest.fillPasswordInput(config.password);\n  await logginPageTest.checkSaveForFuture();\n  await logginPageTest.login(config.urlhomePageForCheck);\n  await removeProject.goToProjectList();\n  await removeProject.findProject(config.companyName, config.projectsPage);\n  await removeProject.removefindProject(config.companyName);\n  await driver.executeScript(\"lambda-status=passed\");\n} catch (error) {\n  await makeScreenshot(driver, 'project_remove');\n  await driver.executeScript(\"lambda-status=failed\");\n  throw error;\n}",
              "err": {
                "message": "Error: No such project in the list of project",
                "estack": "Error: No such project in the list of project\n    at RemoveProject.findProjectInList (src\\classes\\project\\removeProject.js:26:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async RemoveProject.findProject (src\\classes\\project\\removeProject.js:92:7)\n    at async Context.<anonymous> (test\\createEditRemoveProjectBySA.test.js:115:9)",
                "diff": null
              },
              "uuid": "53513a7c-d64c-4f2c-bfad-9578224f4bec",
              "parentUUID": "0b01dfa6-b391-49fb-97c5-dbb54dcb516a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "33090281-6286-46f0-8fcc-b6dde290765c",
            "53513a7c-d64c-4f2c-bfad-9578224f4bec"
          ],
          "pending": [],
          "skipped": [],
          "duration": 75646,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "b12c5f8a-e441-47b7-bb1d-88163f27dce9",
          "title": "Invite and remove user by the Company Admin and measure metrics",
          "fullFile": "C:\\terenbro\\colorjob-measure-metrics\\test\\inviteAndRemoveUserByCA.test.js",
          "file": "\\test\\inviteAndRemoveUserByCA.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Invite and remove user by the Company Admin and measure metrics\"",
              "fullTitle": "Invite and remove user by the Company Admin and measure metrics \"before each\" hook in \"Invite and remove user by the Company Admin and measure metrics\"",
              "timedOut": false,
              "duration": 8543,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await createDriver(browser, bVersion, os);",
              "err": {},
              "uuid": "37e06327-f2a5-4b44-81b5-3f231b8bd621",
              "parentUUID": "b12c5f8a-e441-47b7-bb1d-88163f27dce9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Invite and remove user by the Company Admin and measure metrics\"",
              "fullTitle": "Invite and remove user by the Company Admin and measure metrics \"after each\" hook in \"Invite and remove user by the Company Admin and measure metrics\"",
              "timedOut": false,
              "duration": 144,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) {\n  await driver.quit();\n}\nreturn;",
              "err": {},
              "uuid": "d2558dfc-dbfc-4490-9c11-1059ad091f5d",
              "parentUUID": "b12c5f8a-e441-47b7-bb1d-88163f27dce9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "invite user by the company admin",
              "fullTitle": "Invite and remove user by the Company Admin and measure metrics invite user by the company admin",
              "timedOut": false,
              "duration": 22287,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// await driver.executeScript(\"document.body.style.zoom='50%'\");\ntestname = `Invite user by the company admin${browser}`;\nawait driver.executeScript(`lambda-name=${testname}`);\nconst logginPageTest = new LoginPage(driver, config.urlLoginPage);\nconst inviteUserTest = new InviteUser(driver);\nawait logginPageTest.openLoginForm();\nawait logginPageTest.fillEmailInput(config.emailCA);\nawait logginPageTest.fillPasswordInput(config.passwordCA);\nawait logginPageTest.checkSaveForFuture();\nawait logginPageTest.login(config.mainCompanyPage);\ntry {\n  await inviteUserTest.goToView(config.projectNameMain, 'ca');\n  await inviteUserTest.goToSelektTab(config.users);\n  const firstMeasure =\n    await inviteUserTest.openInviteUserFormInProjectMeasureTime();\n  const secondMeasure =\n    await inviteUserTest.fillInviteFormByCAMeasureTime(\n      config.emailUseForTest,\n      config.projManager\n    );\n  await inviteUserTest.checkCreateNewUser(config.emailUseForTest);\n  inviteUserMeasure['Time metrics for invite user by CA'] = {\n    ...firstMeasure,\n    ...secondMeasure,\n  };\n  if (browser === 'Safari') {\n    saveMetrics(\n      config.metricsFilePath,\n      config.metricfileNameSafari,\n      inviteUserMeasure\n    );\n  } else {\n    saveMetrics(\n      config.metricsFilePath,\n      config.metricfileNameChrom,\n      inviteUserMeasure\n    );\n  }\n  await driver.executeScript('lambda-status=passed');\n} catch (error) {\n  await makeScreenshot(driver, 'user_create_by_CA');\n  await driver.executeScript('lambda-status=failed');\n  throw error;\n}",
              "err": {},
              "uuid": "b728c364-f9f7-4adf-aae8-e9696701d3f6",
              "parentUUID": "b12c5f8a-e441-47b7-bb1d-88163f27dce9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "remove user by the company admin",
              "fullTitle": "Invite and remove user by the Company Admin and measure metrics remove user by the company admin",
              "timedOut": false,
              "duration": 14041,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "testname = `Remove user by the company admin${browser}`;\nawait driver.executeScript(`lambda-name=${testname}`);\nconst logginPageTest = new LoginPage(driver, config.urlLoginPage);\nconst removeUserTest = new RemoveUser(driver);\nawait logginPageTest.openLoginForm();\nawait logginPageTest.fillEmailInput(config.emailCA);\nawait logginPageTest.fillPasswordInput(config.passwordCA);\nawait logginPageTest.checkSaveForFuture();\nawait logginPageTest.login(config.mainCompanyPage);\ntry {\n  await removeUserTest.goToUserList('ca');\n  await removeUserTest.findUser(\n    config.emailUseForTest,\n    config.mainCompanyUsersPage\n  );\n  await removeUserTest.removefindUser();\n  await removeUserTest.checkIfUserRemove(\n    config.emailUseForTest,\n    config.mainCompanyUsersPage\n  );\n  await driver.executeScript('lambda-status=passed');\n} catch (error) {\n  await makeScreenshot(driver, 'user_remove_by_CA');\n  await driver.executeScript('lambda-status=failed');\n  throw error;\n}",
              "err": {},
              "uuid": "cade4820-914d-4a91-b46d-51e30b1fad6f",
              "parentUUID": "b12c5f8a-e441-47b7-bb1d-88163f27dce9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b728c364-f9f7-4adf-aae8-e9696701d3f6",
            "cade4820-914d-4a91-b46d-51e30b1fad6f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 36328,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "06971935-5bf1-4258-acbc-cd284cd0000f",
          "title": "Invite and remove user by the Company Admin and measure metrics",
          "fullFile": "C:\\terenbro\\colorjob-measure-metrics\\test\\inviteAndRemoveUserByCA.test.js",
          "file": "\\test\\inviteAndRemoveUserByCA.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Invite and remove user by the Company Admin and measure metrics\"",
              "fullTitle": "Invite and remove user by the Company Admin and measure metrics \"before each\" hook in \"Invite and remove user by the Company Admin and measure metrics\"",
              "timedOut": false,
              "duration": 14829,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await createDriver(browser, bVersion, os);",
              "err": {},
              "uuid": "4d19dced-4698-4ca1-8cb6-5ea2776316f7",
              "parentUUID": "06971935-5bf1-4258-acbc-cd284cd0000f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Invite and remove user by the Company Admin and measure metrics\"",
              "fullTitle": "Invite and remove user by the Company Admin and measure metrics \"after each\" hook in \"Invite and remove user by the Company Admin and measure metrics\"",
              "timedOut": false,
              "duration": 211,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) {\n  await driver.quit();\n}\nreturn;",
              "err": {},
              "uuid": "84d43f59-734f-4808-aba6-d3870efa0e58",
              "parentUUID": "06971935-5bf1-4258-acbc-cd284cd0000f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "invite user by the company admin",
              "fullTitle": "Invite and remove user by the Company Admin and measure metrics invite user by the company admin",
              "timedOut": false,
              "duration": 24152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// await driver.executeScript(\"document.body.style.zoom='50%'\");\ntestname = `Invite user by the company admin${browser}`;\nawait driver.executeScript(`lambda-name=${testname}`);\nconst logginPageTest = new LoginPage(driver, config.urlLoginPage);\nconst inviteUserTest = new InviteUser(driver);\nawait logginPageTest.openLoginForm();\nawait logginPageTest.fillEmailInput(config.emailCA);\nawait logginPageTest.fillPasswordInput(config.passwordCA);\nawait logginPageTest.checkSaveForFuture();\nawait logginPageTest.login(config.mainCompanyPage);\ntry {\n  await inviteUserTest.goToView(config.projectNameMain, 'ca');\n  await inviteUserTest.goToSelektTab(config.users);\n  const firstMeasure =\n    await inviteUserTest.openInviteUserFormInProjectMeasureTime();\n  const secondMeasure =\n    await inviteUserTest.fillInviteFormByCAMeasureTime(\n      config.emailUseForTest,\n      config.projManager\n    );\n  await inviteUserTest.checkCreateNewUser(config.emailUseForTest);\n  inviteUserMeasure['Time metrics for invite user by CA'] = {\n    ...firstMeasure,\n    ...secondMeasure,\n  };\n  if (browser === 'Safari') {\n    saveMetrics(\n      config.metricsFilePath,\n      config.metricfileNameSafari,\n      inviteUserMeasure\n    );\n  } else {\n    saveMetrics(\n      config.metricsFilePath,\n      config.metricfileNameChrom,\n      inviteUserMeasure\n    );\n  }\n  await driver.executeScript('lambda-status=passed');\n} catch (error) {\n  await makeScreenshot(driver, 'user_create_by_CA');\n  await driver.executeScript('lambda-status=failed');\n  throw error;\n}",
              "err": {},
              "uuid": "767c9439-f413-412b-8333-77ef6f939b09",
              "parentUUID": "06971935-5bf1-4258-acbc-cd284cd0000f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "remove user by the company admin",
              "fullTitle": "Invite and remove user by the Company Admin and measure metrics remove user by the company admin",
              "timedOut": false,
              "duration": 16116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "testname = `Remove user by the company admin${browser}`;\nawait driver.executeScript(`lambda-name=${testname}`);\nconst logginPageTest = new LoginPage(driver, config.urlLoginPage);\nconst removeUserTest = new RemoveUser(driver);\nawait logginPageTest.openLoginForm();\nawait logginPageTest.fillEmailInput(config.emailCA);\nawait logginPageTest.fillPasswordInput(config.passwordCA);\nawait logginPageTest.checkSaveForFuture();\nawait logginPageTest.login(config.mainCompanyPage);\ntry {\n  await removeUserTest.goToUserList('ca');\n  await removeUserTest.findUser(\n    config.emailUseForTest,\n    config.mainCompanyUsersPage\n  );\n  await removeUserTest.removefindUser();\n  await removeUserTest.checkIfUserRemove(\n    config.emailUseForTest,\n    config.mainCompanyUsersPage\n  );\n  await driver.executeScript('lambda-status=passed');\n} catch (error) {\n  await makeScreenshot(driver, 'user_remove_by_CA');\n  await driver.executeScript('lambda-status=failed');\n  throw error;\n}",
              "err": {},
              "uuid": "ddbf7fe3-6afc-4a25-b0b2-31bbd472416a",
              "parentUUID": "06971935-5bf1-4258-acbc-cd284cd0000f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "767c9439-f413-412b-8333-77ef6f939b09",
            "ddbf7fe3-6afc-4a25-b0b2-31bbd472416a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 40268,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "reports",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "colorjob",
        "reportFilename": "reports"
      },
      "version": "6.2.0"
    }
  }
}